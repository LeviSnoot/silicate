name: Linux
on:
  workflow_dispatch:

env:
  BIN_NAME: silicate

jobs:
  build_job:
    name: Build working-linux-build branch
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-linux]
        include:
        - build: x86_64-linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false
        # - build: aarch64-linux
        #   os: ubuntu-latest
        #   rust: stable
        #   target: aarch64-unknown-linux-gnu
        #   cross: true

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          mkdir dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/${{ env.BIN_NAME }}.exe" "dist/"
          else
            cp "target/${{ matrix.target }}/release/${{ env.BIN_NAME }}" "dist/"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.build }}
          path: dist
